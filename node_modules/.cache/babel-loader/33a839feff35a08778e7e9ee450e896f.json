{"ast":null,"code":"var _jsxFileName = \"/home/laboratorio1/Escritorio/maxi-app-mateify/src/components/listaprueba.js/lista.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react'; // mi componente principal <Lista>\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Lista = () => {\n  _s();\n\n  // guardo el estado list de valor inicial la lista que tengo\n  const [list, setList] = useState([{\n    id: 1,\n    name: 'A las nueve',\n    artista: 'NTVG',\n    duracion: '3:24',\n    votos: 4\n  }, {\n    id: 2,\n    name: 'Maldicion',\n    artista: 'Once tiros',\n    duracion: '3:04',\n    votos: 3\n  }, {\n    id: 'three',\n    name: 'Cancion para uno',\n    artista: 'La Vela Puerca',\n    duracion: '2:53',\n    votos: 2\n  }, {\n    id: 'four',\n    name: 'Mi Revolucion',\n    artista: 'Cuartro Pesos de Propina',\n    duracion: '3:24',\n    votos: 1\n  }, {\n    id: 'five',\n    name: 'Lo mas simple de las cosas',\n    artista: 'Hereford',\n    duracion: '3:17',\n    votos: 0\n  }]);\n\n  const updateVote = editVote => {\n    const changeVote = list.map(listas => listas.id === editVote.id ? editVote : listas);\n    setVoto(changeVote);\n  }; // utilizo useEffect para ejecutar este código sólo una vez\n\n\n  useEffect(() => {\n    // copio la lista con [...list] y la ordeno con sort()\n    const sortedList = [...list].sort((b, a) => a.votos > b.votos ? 1 : a.votos < b.votos ? -1 : 0); // actualizo el estado con la nueva lista ya ordenada\n\n    setList(sortedList);\n  }, []); // vuelco el contenido del estado `list`\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        let newSortedList = [...list].sort((a, b) => a.votos > b.votos ? 1 : a.votos < b.votos ? -1 : 0); // si la lista después de ordenarla tiene el mismo primer elemento, lo repito a la inversa\n        // (claro que esto es ineficiente, lo suyo sería habilitar otro estado para guardar el tipo de ordenamiento que hemos hecho)\n\n        if (newSortedList[0] === list[0]) newSortedList = [...list].sort((b, a) => a.votos > b.votos ? 1 : a.votos < b.votos ? -1 : 0);\n        setList(newSortedList);\n      },\n      children: \"Ordenar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => updateVote({\n        id: one,\n        name: 'A las nueve',\n        artista: 'NTVG',\n        duracion: '3:24',\n        votos: 5\n      }),\n      children: \"Like\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: list.map(listas => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [listas.id, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this), listas.name, \"   \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 29\n        }, this), listas.artista, \"  \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 31\n        }, this), listas.votos, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 14\n        }, this)]\n      }, listas.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Lista, \"4e9w2rEQxZoI4e//QUVjIHgluk4=\");\n\n_c = Lista;\nexport default Lista;\n\nvar _c;\n\n$RefreshReg$(_c, \"Lista\");","map":{"version":3,"sources":["/home/laboratorio1/Escritorio/maxi-app-mateify/src/components/listaprueba.js/lista.js"],"names":["React","useState","useEffect","Lista","list","setList","id","name","artista","duracion","votos","updateVote","editVote","changeVote","map","listas","setVoto","sortedList","sort","b","a","newSortedList","one"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CAEA;;;;;AACA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,CAC/B;AACEK,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAC,aAFP;AAGEC,IAAAA,OAAO,EAAE,MAHX;AAIEC,IAAAA,QAAQ,EAAE,MAJZ;AAKEC,IAAAA,KAAK,EAAE;AALT,GAD+B,EAQ/B;AACEJ,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAC,WAFP;AAGEC,IAAAA,OAAO,EAAE,YAHX;AAIEC,IAAAA,QAAQ,EAAE,MAJZ;AAKEC,IAAAA,KAAK,EAAE;AALT,GAR+B,EAe/B;AACEJ,IAAAA,EAAE,EAAE,OADN;AAEEC,IAAAA,IAAI,EAAE,kBAFR;AAGEC,IAAAA,OAAO,EAAE,gBAHX;AAIEC,IAAAA,QAAQ,EAAE,MAJZ;AAKEC,IAAAA,KAAK,EAAE;AALT,GAf+B,EAsB/B;AACEJ,IAAAA,EAAE,EAAE,MADN;AAEEC,IAAAA,IAAI,EAAE,eAFR;AAGEC,IAAAA,OAAO,EAAE,0BAHX;AAIEC,IAAAA,QAAQ,EAAE,MAJZ;AAKEC,IAAAA,KAAK,EAAE;AALT,GAtB+B,EA6B/B;AACEJ,IAAAA,EAAE,EAAE,MADN;AAEEC,IAAAA,IAAI,EAAE,4BAFR;AAGEC,IAAAA,OAAO,EAAE,UAHX;AAIEC,IAAAA,QAAQ,EAAE,MAJZ;AAKEC,IAAAA,KAAK,EAAE;AALT,GA7B+B,CAAD,CAAhC;;AAuCA,QAAMC,UAAU,GAAIC,QAAD,IAAc;AAC/B,UAAMC,UAAU,GAAGT,IAAI,CAACU,GAAL,CAASC,MAAM,IAChCA,MAAM,CAACT,EAAP,KAAcM,QAAQ,CAACN,EAAvB,GACEM,QADF,GAEEG,MAHe,CAAnB;AAKAC,IAAAA,OAAO,CAACH,UAAD,CAAP;AAED,GARD,CAzCkB,CAsDlB;;;AACAX,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMe,UAAU,GAAG,CAAC,GAAGb,IAAJ,EAAUc,IAAV,CAAe,CAACC,CAAD,EAAIC,CAAJ,KAAWA,CAAC,CAACV,KAAF,GAAUS,CAAC,CAACT,KAAZ,GAAoB,CAApB,GAAwBU,CAAC,CAACV,KAAF,GAAUS,CAAC,CAACT,KAAZ,GAAoB,CAAC,CAArB,GAAyB,CAA3E,CAAnB,CAFc,CAGd;;AACAL,IAAAA,OAAO,CAACY,UAAD,CAAP;AACD,GALQ,EAKN,EALM,CAAT,CAvDkB,CA8DlB;;AACA,sBACE;AAAA,4BAEE;AACE,MAAA,OAAO,EAAE,MAAM;AACb,YAAII,aAAa,GAAG,CAAC,GAAGjB,IAAJ,EAAUc,IAAV,CAAe,CAACE,CAAD,EAAID,CAAJ,KAAWC,CAAC,CAACV,KAAF,GAAUS,CAAC,CAACT,KAAZ,GAAoB,CAApB,GAAwBU,CAAC,CAACV,KAAF,GAAUS,CAAC,CAACT,KAAZ,GAAoB,CAAC,CAArB,GAAyB,CAA3E,CAApB,CADa,CAEb;AACA;;AACA,YAAIW,aAAa,CAAC,CAAD,CAAb,KAAqBjB,IAAI,CAAC,CAAD,CAA7B,EACEiB,aAAa,GAAG,CAAC,GAAGjB,IAAJ,EAAUc,IAAV,CAAe,CAACC,CAAD,EAAIC,CAAJ,KAAWA,CAAC,CAACV,KAAF,GAAUS,CAAC,CAACT,KAAZ,GAAoB,CAApB,GAAwBU,CAAC,CAACV,KAAF,GAAUS,CAAC,CAACT,KAAZ,GAAoB,CAAC,CAArB,GAAyB,CAA3E,CAAhB;AACFL,QAAAA,OAAO,CAACgB,aAAD,CAAP;AACD,OARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAeE;AAAQ,MAAA,OAAO,EAAE,MAAMV,UAAU,CAAE;AAACL,QAAAA,EAAE,EAAEgB,GAAL;AAAUf,QAAAA,IAAI,EAAC,aAAf;AAC/BC,QAAAA,OAAO,EAAE,MADsB;AACdC,QAAAA,QAAQ,EAAE,MADI;AACIC,QAAAA,KAAK,EAAE;AADX,OAAF,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAfF,eAqBE;AAAA,gBACGN,IAAI,CAACU,GAAL,CAAUC,MAAD,iBACR;AAAA,mBACGA,MAAM,CAACT,EADV,oBACc;AAAA;AAAA;AAAA;AAAA,gBADd,EAEGS,MAAM,CAACR,IAFV,sBAEkB;AAAA;AAAA;AAAA;AAAA,gBAFlB,EAGGQ,MAAM,CAACP,OAHV,qBAGoB;AAAA;AAAA;AAAA;AAAA,gBAHpB,EAIIO,MAAM,CAACL,KAJX,oBAIkB;AAAA;AAAA;AAAA;AAAA,gBAJlB,eAKG;AAAA;AAAA;AAAA;AAAA,gBALH;AAAA,SAASK,MAAM,CAACT,EAAhB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YArBF;AAAA,kBADF;AAqCD,CApGD;;GAAMH,K;;KAAAA,K;AAsGN,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\n\n// mi componente principal <Lista>\nconst Lista = () => {\n  // guardo el estado list de valor inicial la lista que tengo\n  const [list, setList] = useState([\n    {\n      id: 1,\n      name:'A las nueve',\n      artista: 'NTVG',\n      duracion: '3:24',\n      votos: 4,\n    },\n    {\n      id: 2,\n      name:'Maldicion',\n      artista: 'Once tiros',\n      duracion: '3:04',\n      votos: 3,\n    },\n    {\n      id: 'three',\n      name: 'Cancion para uno',\n      artista: 'La Vela Puerca',\n      duracion: '2:53',\n      votos: 2,\n    },\n    {\n      id: 'four',\n      name: 'Mi Revolucion',\n      artista: 'Cuartro Pesos de Propina',\n      duracion: '3:24',\n      votos: 1,\n    },\n    {\n      id: 'five',\n      name: 'Lo mas simple de las cosas',\n      artista: 'Hereford',\n      duracion: '3:17',\n      votos: 0,\n    }\n    \n  ]);\n\n  const updateVote = (editVote) => {\n    const changeVote = list.map(listas => (\n      listas.id === editVote.id \n      ? editVote \n      : listas\n    ))\n    setVoto(changeVote)\n    \n  }\n\n\n\n\n  // utilizo useEffect para ejecutar este código sólo una vez\n  useEffect(() => {\n    // copio la lista con [...list] y la ordeno con sort()\n    const sortedList = [...list].sort((b, a) => (a.votos > b.votos ? 1 : a.votos < b.votos ? -1 : 0))\n    // actualizo el estado con la nueva lista ya ordenada\n    setList(sortedList)\n  }, [])\n\n  // vuelco el contenido del estado `list`\n  return (\n    <>\n      {/* Aquí pongo el botón para reordenar la lista */}\n      <button\n        onClick={() => {\n          let newSortedList = [...list].sort((a, b) => (a.votos > b.votos ? 1 : a.votos < b.votos ? -1 : 0))\n          // si la lista después de ordenarla tiene el mismo primer elemento, lo repito a la inversa\n          // (claro que esto es ineficiente, lo suyo sería habilitar otro estado para guardar el tipo de ordenamiento que hemos hecho)\n          if (newSortedList[0] === list[0])\n            newSortedList = [...list].sort((b, a) => (a.votos > b.votos ? 1 : a.votos < b.votos ? -1 : 0))\n          setList(newSortedList)\n        }}\n      >\n        Ordenar\n      </button>\n\n      <button onClick={() => updateVote ({id: one, name:'A las nueve'\n        , artista: 'NTVG', duracion: '3:24', votos: 5,})}>\n          Like\n      </button>\n\n      {/* Y aquí la lista, cada vez que el estado cambie este componente se va a repintar y a actualizar la vista */}\n      <ul >\n        {list.map((listas) => ( \n          <li key={listas.id}>\n            {listas.id} <br />\n            {listas.name}   <br /> \n            {listas.artista}  <br />  \n             {listas.votos} <br /> \n             <hr/> \n\n\n          </li>\n        ))}\n      </ul>\n    </>\n  )\n}\n\nexport default Lista\n"]},"metadata":{},"sourceType":"module"}